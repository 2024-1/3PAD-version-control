import tkinter as tk
from tkinter import ttk
import random
from tkinter import messagebox

class Mathgame:
    def __init__(self, root):
        self.root = root
        self.root.title("Math Quiz")
        self.root.geometry("400x300")
        self.root.configure(bg="#282C34")  # Set background color for the window

        self.score = 0
        self.question_count = 0
        self.questions = []
        
        self.create_welcome_screen()

    def create_welcome_screen(self):
        self.clear_window()

        title_label = ttk.Label(self.root, text="Math Quiz", font=("Helvetica", 18), background="#282C34", foreground="#61DAFB")
        title_label.pack(pady=20)

        addition_button = ttk.Button(self.root, text="Addition", command=lambda: self.start_quiz('Addition'))
        addition_button.pack(pady=10)

        subtraction_button = ttk.Button(self.root, text="Subtraction", command=lambda: self.start_quiz('Subtraction'))
        subtraction_button.pack(pady=10)

    def start_quiz(self, operation):
        self.operation = operation
        self.score = 0
        self.question_count = 0
        self.questions = self.generate_questions()
        self.show_question()

    def generate_questions(self):
        questions = []
        for _ in range(5):
            num1 = random.randint(1, 10)
            num2 = random.randint(1, 10)
            if self.operation == 'Addition':
                questions.append((num1, num2, num1 + num2))
            elif self.operation == 'Subtraction':
                questions.append((num1, num2, num1 - num2))
        return questions

    def show_question(self):
        if self.question_count < len(self.questions):
            self.clear_window()
            num1, num2, _ = self.questions[self.question_count]

            if self.operation == 'Addition':
                question_text = f"What is {num1} + {num2}?"
            elif self.operation == 'Subtraction':
                question_text = f"What is {num1} - {num2}?"

            question_label = ttk.Label(self.root, text=question_text, font=("Helvetica", 14), background="#282C34", foreground="#98C379")
            question_label.pack(pady=10)

            self.answer_var = tk.StringVar()
            answer_entry = ttk.Entry(self.root, textvariable=self.answer_var, font=("Helvetica", 12))
            answer_entry.pack(pady=5)

            submit_button = ttk.Button(self.root, text="Submit", command=self.check_answer)
            submit_button.pack(pady=10)
        else:
            self.show_score()

    def check_answer(self):
        if not self.answer_var.get().strip():  # Check if the input is empty
            tk.messagebox.showerror("Error", "Answer cannot be empty!")
            return

        _, _, correct_answer = self.questions[self.question_count]
        user_answer = int(self.answer_var.get().strip())

        if user_answer == correct_answer:
            self.score += 1

        self.question_count += 1
        self.show_question()

    def show_score(self):
        self.clear_window()

        result_label = ttk.Label(self.root, text=f"Your score: {self.score}/5", font=("Helvetica", 16), background="#282C34", foreground="#E06C75")
        result_label.pack(pady=20)

        back_button = ttk.Button(self.root, text="Back to Menu", command=self.create_welcome_screen)
        back_button.pack(pady=10)

    def clear_window(self):
        for widget in self.root.winfo_children():
            widget.destroy()

if __name__ == "__main__":
    root = tk.Tk()
    quiz = Mathgame(root)
    root.mainloop()
